CREATE TABLE IF NOT EXISTS USERS
(
    ID       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(50) NOT NULL,
    LOGIN    VARCHAR(50) NOT NULL,
    NAME     VARCHAR(50) NOT NULL,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    ID        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID   INTEGER not null references USERS (id),
    FRIEND_ID INTEGER not null references USERS (id),
    STATUS    BOOLEAN DEFAULT false
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS
(
    ID           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         CHARACTER VARYING(50)          not null,
    DESCRIPTION  CHARACTER VARYING(200),
    RELEASE_DATE DATE,
    DURATION     INTEGER check ("DURATION" > 0) NOT NULL,
    MPA_ID       INTEGER                        not null references MPA (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    ID       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID  INTEGER not null references FILMS (ID),
    GENRE_ID INTEGER not null references GENRES (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_LIKES
(
    ID      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID INTEGER not null references FILMS (ID),
    USER_ID INTEGER not null references USERS (ID)
);